{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/special_topics/artists-instruments-boilerplate-antd/client/src/components/forms/AddInstrument.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Form, Input, Button } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { GET_INSTRUMENTS, ADD_INSTRUMENT } from '../../queries';\n\nconst AddInstrument = () => {\n  const [id] = useState(uuidv4());\n  const [addInstrument] = useMutation(ADD_INSTRUMENT);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState(); // To disable submit button at the beginning.\n\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    const {\n      firstName,\n      lastName\n    } = values;\n    addInstrument({\n      variables: {\n        id,\n        year,\n        brand,\n        type,\n        price,\n        artistId\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addArtist: {\n          __typename: 'Artist',\n          id,\n          firstName,\n          lastName\n        }\n      } //   update: (proxy, { data: { addArtist } }) => {\n      //     const data = proxy.readQuery({ query: GET_ARTISTS })\n      //     proxy.writeQuery({\n      //       query: GET_ARTISTS,\n      //       data: {\n      //         ...data,\n      //         artists: [...data.artists, addArtist]\n      //       }\n      //     })\n      //   }\n\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"add-instrument-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    size: \"large\",\n    style: {\n      marginBottom: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"year\",\n    rules: [{\n      required: true,\n      message: 'Please input the year of the instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. 1981\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"lastName\",\n    rules: [{\n      required: true,\n      message: 'Please input your last name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Smith\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    shouldUpdate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, () => /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: !form.isFieldsTouched(true) || form.getFieldsError().filter(({\n      errors\n    }) => errors.length).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Add Artist\")));\n};\n\nexport default AddInstrument;","map":{"version":3,"sources":["/Users/user/Documents/special_topics/artists-instruments-boilerplate-antd/client/src/components/forms/AddInstrument.js"],"names":["React","useEffect","useState","useMutation","Form","Input","Button","v4","uuidv4","GET_INSTRUMENTS","ADD_INSTRUMENT","AddInstrument","id","addInstrument","form","useForm","forceUpdate","onFinish","values","firstName","lastName","variables","year","brand","type","price","artistId","optimisticResponse","__typename","addArtist","marginBottom","required","message","isFieldsTouched","getFieldsError","filter","errors","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { Form, Input, Button } from 'antd'\n\nimport { v4 as uuidv4 } from 'uuid'\nimport { GET_INSTRUMENTS, ADD_INSTRUMENT } from '../../queries'\n\nconst AddInstrument = () => {\n    const [id] = useState(uuidv4())\n  const [addInstrument] = useMutation(ADD_INSTRUMENT)\n\n  const [form] = Form.useForm()\n  const [, forceUpdate] = useState()\n\n  // To disable submit button at the beginning.\n  useEffect(() => {\n    forceUpdate({})\n  }, [])\n\n  const onFinish = values => {\n    const { firstName, lastName } = values\n\n    addInstrument({\n      variables: {\n        id,\n        year,\n        brand,\n        type,\n        price,\n        artistId\n\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addArtist: {\n          __typename: 'Artist',\n          id,\n          firstName,\n          lastName\n        }\n      },\n    //   update: (proxy, { data: { addArtist } }) => {\n    //     const data = proxy.readQuery({ query: GET_ARTISTS })\n    //     proxy.writeQuery({\n    //       query: GET_ARTISTS,\n    //       data: {\n    //         ...data,\n    //         artists: [...data.artists, addArtist]\n    //       }\n    //     })\n    //   }\n    })\n  }\n\n    return(\n        <Form\n      form={form}\n      name='add-instrument-form'\n      layout='inline'\n      onFinish={onFinish}\n      size='large'\n      style={{ marginBottom: '40px' }}\n    >\n      <Form.Item\n        name='year'\n        rules={[{ required: true, message: 'Please input the year of the instrument!' }]}\n      >\n        <Input placeholder='i.e. 1981' />\n      </Form.Item>\n      <Form.Item\n        name='lastName'\n        rules={[{ required: true, message: 'Please input your last name!' }]}\n      >\n        <Input placeholder='i.e. Smith' />\n      </Form.Item>\n      <Form.Item shouldUpdate={true}>\n        {() => (\n          <Button\n            type='primary'\n            htmlType='submit'\n            disabled={\n              !form.isFieldsTouched(true) ||\n              form.getFieldsError().filter(({ errors }) => errors.length).length\n            }\n          >\n            Add Artist\n          </Button>\n        )}\n      </Form.Item>\n    </Form>\n    \n    )\n}\n\nexport default AddInstrument"]},"metadata":{},"sourceType":"module"}