{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/special_topics/artists-instruments-boilerplate-antd/client/src/components/forms/AddInstrument.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Form, Input, Button, Select } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { GET_INSTRUMENTS, ADD_INSTRUMENT } from '../../queries';\nconst {\n  Option\n} = Select;\n\nconst handleChange = value => {\n  console.log(`selected ${value}`);\n};\n\nconst AddInstrument = () => {\n  //     const [id] = useState(uuidv4())\n  //   const [addInstrument] = useMutation(ADD_INSTRUMENT)\n  //   const [form] = Form.useForm()\n  //   const [, forceUpdate] = useState()\n  // To disable submit button at the beginning.\n  //useEffect(() => {\n  //forceUpdate({})\n  // }, [])\n  //const onFinish = values => {\n  //const { firstName, lastName } = values\n  // addInstrument({\n  //   variables: {\n  //     id,\n  //     year,\n  //     brand,\n  //     type,\n  //     price,\n  //     artistId\n  //   },\n  //   optimisticResponse: {\n  //     __typename: 'Mutation',\n  //     addInstrument: {\n  //       __typename: 'Instrument',\n  //       id,\n  //     year,\n  //     brand,\n  //     type,\n  //     price,\n  //     artistId\n  //     }\n  //   },\n  //   update: (proxy, { data: { addArtist } }) => {\n  //     const data = proxy.readQuery({ query: GET_ARTISTS })\n  //     proxy.writeQuery({\n  //       query: GET_ARTISTS,\n  //       data: {\n  //         ...data,\n  //         artists: [...data.artists, addArtist]\n  //       }\n  //     })\n  //   }\n  //})\n  //}\n  return /*#__PURE__*/React.createElement(Form //   form={form}\n  //   name='add-instrument-form'\n  , {\n    layout: \"inline\" //   onFinish={onFinish}\n    ,\n    size: \"medium\",\n    style: {\n      marginBottom: '40px',\n      marginTop: '40px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"year\",\n    rules: [{\n      required: true,\n      message: 'Please input the year of the instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. 1981\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"brand\",\n    rules: [{\n      required: true,\n      message: 'Please input the brand of the instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Yamaha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"type\",\n    rules: [{\n      required: true,\n      message: 'Please input the type of the instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Acoustic Guitar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"price\",\n    rules: [{\n      required: true,\n      message: 'Please input the price of the instrument!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. $300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"artistId\",\n    rules: [{\n      required: true,\n      message: 'Please choose the artist!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    defaultValue: \"lucy\",\n    style: {\n      width: 120\n    },\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"jack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Jack\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"lucy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Lucy\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"disabled\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Disabled\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"Yiminghe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"yiminghe\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    shouldUpdate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, () => /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\" // disabled={\n    //   !form.isFieldsTouched(true) ||\n    //   form.getFieldsError().filter(({ errors }) => errors.length).length\n    // }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Add Instrument\")));\n};\n\nexport default AddInstrument;","map":{"version":3,"sources":["/Users/user/Documents/special_topics/artists-instruments-boilerplate-antd/client/src/components/forms/AddInstrument.js"],"names":["React","useEffect","useState","useMutation","Form","Input","Button","Select","v4","uuidv4","GET_INSTRUMENTS","ADD_INSTRUMENT","Option","handleChange","value","console","log","AddInstrument","marginBottom","marginTop","required","message","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { Form, Input, Button , Select} from 'antd'\n\nimport { v4 as uuidv4 } from 'uuid'\nimport { GET_INSTRUMENTS, ADD_INSTRUMENT } from '../../queries'\nconst { Option } = Select;\nconst handleChange = (value) =>{\n    console.log(`selected ${value}`);\n\n}\n\nconst AddInstrument = () => {\n//     const [id] = useState(uuidv4())\n//   const [addInstrument] = useMutation(ADD_INSTRUMENT)\n\n//   const [form] = Form.useForm()\n//   const [, forceUpdate] = useState()\n\n  // To disable submit button at the beginning.\n  //useEffect(() => {\n    //forceUpdate({})\n // }, [])\n\n  //const onFinish = values => {\n    //const { firstName, lastName } = values\n\n    // addInstrument({\n    //   variables: {\n    //     id,\n    //     year,\n    //     brand,\n    //     type,\n    //     price,\n    //     artistId\n\n    //   },\n    //   optimisticResponse: {\n    //     __typename: 'Mutation',\n    //     addInstrument: {\n    //       __typename: 'Instrument',\n    //       id,\n    //     year,\n    //     brand,\n    //     type,\n    //     price,\n    //     artistId\n\n    //     }\n    //   },\n    //   update: (proxy, { data: { addArtist } }) => {\n    //     const data = proxy.readQuery({ query: GET_ARTISTS })\n    //     proxy.writeQuery({\n    //       query: GET_ARTISTS,\n    //       data: {\n    //         ...data,\n    //         artists: [...data.artists, addArtist]\n    //       }\n    //     })\n    //   }\n    //})\n  //}\n\n    return(\n        <Form\n    //   form={form}\n    //   name='add-instrument-form'\n    layout='inline'\n    //   onFinish={onFinish}\n      size='medium'\n      style={{ marginBottom: '40px',marginTop: '40px' }}\n    >\n      <Form.Item\n        name='year'\n        rules={[{ required: true, message: 'Please input the year of the instrument!' }]}\n      >\n        <Input placeholder='i.e. 1981' />\n      </Form.Item>\n      <Form.Item\n        name='brand'\n        rules={[{ required: true, message: 'Please input the brand of the instrument!' }]}\n      >\n        <Input placeholder='i.e. Yamaha' />\n      </Form.Item>\n      <Form.Item\n        name='type'\n        rules={[{ required: true, message: 'Please input the type of the instrument!' }]}\n      >\n        <Input placeholder='i.e. Acoustic Guitar' />\n      </Form.Item>\n      <Form.Item\n        name='price'\n        rules={[{ required: true, message: 'Please input the price of the instrument!' }]}\n      >\n        <Input placeholder='i.e. $300' />\n      </Form.Item>\n      \n      <Form.Item\n        name='artistId'\n        rules={[{ required: true, message: 'Please choose the artist!' }]}\n      >\n        <Select defaultValue=\"lucy\" style={{ width: 120 }} onChange={handleChange}>\n      <Option value=\"jack\">Jack</Option>\n      <Option value=\"lucy\">Lucy</Option>\n      <Option value=\"disabled\" disabled>\n        Disabled\n      </Option>\n      <Option value=\"Yiminghe\">yiminghe</Option>\n    </Select>\n      </Form.Item>\n      <Form.Item shouldUpdate={true}>\n        {() => (\n          <Button\n            type='primary'\n            htmlType='submit'\n            // disabled={\n            //   !form.isFieldsTouched(true) ||\n            //   form.getFieldsError().filter(({ errors }) => errors.length).length\n            // }\n          >\n            Add Instrument\n          </Button>\n        )}\n      </Form.Item>\n    </Form>\n    \n    )\n}\n\nexport default AddInstrument"]},"metadata":{},"sourceType":"module"}